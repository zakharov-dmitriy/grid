html {
   box-sizing: border-box;
   scroll-behavior: smooth;
   /*полавная прокрутка*/
}

*,
*::after,
*::before {
   box-sizing: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
   margin: 0;
   padding: 0;
   font-size: inherit;
}

ul,
li {
   list-style: none;
   margin: 0;
   padding: 0;
}

a {
   display: inline-block;
   text-decoration: none;
   color: inherit;
}

img {
   max-width: 100%;
   display: block;
   height: auto;
}

button,
input {
   padding: 0;
   border: none;
   background: transparent;
   cursor: pointer;
}

:root {
   --white: #ffffff;
   --black: #232222;
}

body {
   font-family: "Roboto", sans-serif;
   font-weight: 400;
   font-size: 16px;
   line-height: 120%;
   color: var(--white);
   background-color: #232222;
}

.hidden {
   position: absolute;
   clip: rect(0 0 0 0);
   width: 1px;
   height: 1px;
   margin: -1px;
   font-size: 0;
   line-height: 0;
}

.container {
   max-width: 1240px;
   padding: 0 20px;
   margin: 0 auto;
}

.item {
   background-color: #615f5f;
   color: #f5f6f8;
   padding: 15px;
   border: 2px solid #e6e6e6;
}

.item span {
   margin-top: 30px;
   display: block;
   font-weight: 700;
   font-size: 48px;
   color: #f5f6;
}

.box {
   display: grid;
   grid-template-columns: repeat(4, 1fr);
   /*задаем ширину колонок (fr - равная часть, но можно указыать %, рх, auto)*/
   /*явные колонки, те котолонки, у которых нет размера - неявные*/
   grid-template-rows: 200px 300px auto;
   grid-auto-rows: 125px 225px;
   /*если добавляются элементы в разметку, то они станут все шириной по 125px(если указывыать два числа - дублируеся ширина: сначала 125 потом 225 и тд)*/
   gap: 10px 5px;
   /*расстояние между ячейками (первое: ряды; второе: колонки)*/
   grid-auto-flow: column;
   /*по умолчанию при добавлдении ячеек в структуру они будут становиться в ряды, но свойство со значачением column означает что новые ячейки будут становиться в колонки*/
   grid-auto-columns: 300px;
   /*вновь созданные, добаленные колонки бдут указанным размером*/
   grid-auto-flow: dense;
   /*позволяет заполнять все пустоты от ячеек, когда им указывается размер и они переносятся на другие ряды*/
   /* justify-items: center; */
   /*выравнивание контента по вертикали включая фон*/
   /* align-items: center; */
   /*выравнивание контента по горизонтали*/
}

.item-1 {
   justify-self: center;
   align-self: end;
   /* grid-column-start: span 2;
   grid-row-start: span 3; */

   /* grid-column-start: 2;
   grid-column-end: 4; */


   /* grid-row-start: 1;
   grid-row-end: 3; */
   /* grid-row: 1/3; */

   grid-column: 1/-1;
   /*-1 это последняя линия в грид-сетке*/

}

/* ======Разметка для сайта  */

.elem {
   height: 200px;
   border: 1px solid #999;
}

.wrapper {
   display: grid;
   grid-template-areas:
      'header header header'
      /*означает что header занимает 3 ячейки в ширину*/
      'aside main main'
      /*main занимает 2 ячейки в ширину и 1 ячейка aside (. означает путсая ячейка)*/
      'footer footer footer';
   /*footer занимает 3 ячейки в ширину*/
}

.header {
   grid-area: header;
   /*имена могут быть любыми, служат для связи между свойствами*/
}

.main {
   grid-area: main;
}

.aside {
   grid-area: aside;
}

.footer {
   grid-area: footer;
}